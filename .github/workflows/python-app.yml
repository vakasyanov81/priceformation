# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Lint and check types and tests

on: [ push, pull_request ]

permissions:
  contents: read

env:
  MIN_COVERAGE_SCORE: 75
  FLAKE8_MAX_COMPLEXITY: 7
  MAX_LINE_LENGTH: 120

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11.1
        uses: actions/setup-python@v3
        with:
          python-version: "3.11.1"
      - name: Install poetry
        run: |
          pip install pipx
          pipx install poetry
      - name: Validate the structure of the pyproject.toml
        run: |
          poetry check
      - name: Verify that poetry.lock is consistent with pyproject.toml
        run: |
          poetry check --lock
      - name: Install dependencies
        run: |
          poetry install --no-root
      - name: Test coverage
        run: |
          export PYTHONPATH=${GITHUB_WORKSPACE}
          poetry run pytest --cov ./ ./tests --cov-fail-under=${MIN_COVERAGE_SCORE} --cov-config=./.coveragerc --cov-report term-missing:skip-covered
      - name: Lint code by black
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run black ${GITHUB_WORKSPACE} --check --line-length 120 --target-version py311
      - name: Lint with pylint
        run: |
          export WORK_DIR=$GITHUB_WORKSPACE
          poetry run pylint --rcfile ${GITHUB_WORKSPACE}/pipelines/.pylintrc --output-format=colorized ${GITHUB_WORKSPACE}
